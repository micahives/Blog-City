
<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="mt-12 max-w-md mx-auto bg-white shadow-lg overflow-hidden sm:rounded-lg">
  <div class="px-6 py-4 border border-gray-300">
    <!-- Title -->
    <h2 class="text-lg font-semibold text-primary-700">{{ blogPost.dataValues.title }}</h2>

    <!-- Author -->
    <div class="text-sm text-gray-500">
      by <strong>{{ blogPost.dataValues.author }}</strong>
    </div>

    <!-- Separator Line -->
    <hr class="my-2 border-t border-gray-300">

    <!-- Summary -->
    <p class="text-base text-gray-700">{{ blogPost.dataValues.summary }}</p>

    <!-- Delete and Edit Buttons -->
    <div class="flex justify-between mt-12">
      <button id="deleteButton" class="px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 focus:outline-none focus:ring focus:border-red-300">
        Delete
      </button>
      <button id="editButton" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring focus:border-blue-300">
        Edit
      </button>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteConfirmationModal" class="hidden fixed inset-0 z-10 overflow-y-auto">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <div class="fixed inset-0 transition-opacity" aria-hidden="true">
      <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
    </div>

    <!-- element for centering the modal contents -->
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

    <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
        <div class="sm:flex sm:items-start">
          <div class="mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
            <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6 6h12a2 2 0 002-2V7a2 2 0 00-2-2H8a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
            </svg>
          </div>
          <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
            <h3 class="text-lg leading-6 font-medium text-gray-900">
              Delete Blog Post
            </h3>
            <div class="mt-2">
              <p class="text-sm text-gray-500">
                Are you sure you want to delete this blog post? This action cannot be undone.
              </p>
            </div>
          </div>
        </div>
      </div>
      <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
        <button id="confirmDeleteButton" type="button" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring focus:border-red-300 sm:ml-3 sm:w-auto sm:text-sm">
          Delete
        </button>
        <button id="cancelDeleteButton" type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring focus:border-blue-300 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<div id="confirmationMessage" class="hidden"></div>

<script>
  document.addEventListener('DOMContentLoaded', function() {

    function openDeleteModal() {
      const modal = document.getElementById('deleteConfirmationModal');
      modal.classList.remove('hidden');
    }

    function closeDeleteModal() {
      const modal = document.getElementById('deleteConfirmationModal');
      modal.classList.add('hidden');
    }

    document.getElementById('deleteButton').addEventListener('click', function() {
      openDeleteModal();
    });

    document.getElementById('confirmDeleteButton').addEventListener('click', function() {
      closeDeleteModal();

      const postId = {{ blogPost.dataValues.id }};
      
      fetch(`/dashboard/blog-post/${postId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
      })
        .then(response => {
          if (!response.ok) {
            throw new Error(`Error: ${response.status} - ${response.statusText}`);
          }
          return response.json();
        })
        .then(data => {
          console.log(data.message);
          
          const confirmationMessage = document.getElementById('confirmationMessage');
          confirmationMessage.innerText = 'Blog post deleted successfully!';
          confirmationMessage.classList.remove('hidden');

          window.location.href = '/dashboard';

        })
        .catch(error => {
          console.error('Error deleting blog post:', error.message);
        });
    });

    document.getElementById('cancelDeleteButton').addEventListener('click', function() {
      closeDeleteModal();
    });

    document.getElementById('editButton').addEventListener('click', function() {
      console.log('Edit button clicked');
    });

    console.log('Rendering blog post detail template');
  });
</script>


